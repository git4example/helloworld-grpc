---
apiVersion: v1
kind: Namespace
metadata:
  name: grpcserver
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grpcserver
  namespace: grpcserver
spec:
  selector:
    matchLabels:
      app: grpcserver
  replicas: 1
  template:
    metadata:
      labels:
        app: grpcserver
    spec:
      containers:
      - name: grpc-demo
        image: 064250592128.dkr.ecr.ap-southeast-2.amazonaws.com/helloworld-grpc:latest   #<------- change this to te uri to which the docker image was pushed earlier
        imagePullPolicy: Always
        ports:
        - name: grpc-api
          containerPort: 9000
        env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: grpcserver
  namespace: grpcserver
spec:
  # bypass kube-proxy
  ports:
  - port: 9000
    protocol: TCP
    targetPort: 9000
  clusterIP: None
  selector:
    app: grpcserver
---

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    # alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig":{ "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'
    alb.ingress.kubernetes.io/ssl-redirect: '443'
    alb.ingress.kubernetes.io/backend-protocol-version: GRPC
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/subnets: subnet-083514ae2fffeae36,subnet-0646f689090452c99,subnet-01ee78686b6c137e7  # <----- replace this with the Private Subnets within the VPC in which the EKS cluster exists
    alb.ingress.kubernetes.io/security-groups: sg-0942e6004e1f7507e  # <----- replace this with a security group id within the VPC where the EKS cluster exists. Make sure that this security group is allowed to access
    alb.ingress.kubernetes.io/healthcheck-path: /                                 #the EKS worker nodes
    alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:ap-southeast-2:064250592128:certificate/941f1106-9ed0-42c1-bc1d-0c4a6c46afc4  #<----- replace this with the ACM certificate ARN for the DNS hostname used
  labels:
    app: grpcserver
    environment: dev
  name: grpcserver
  namespace: grpcserver
spec:
  rules:
  - host: grpc.neyami.xyz # <----- replace this as per your host name for which the SSL certtficate is available in ACM
    http:
      paths:
        - path: /
          pathType: Prefix
          backend:
            service: 
              name: grpcserver
              port: 
                number: 9000
